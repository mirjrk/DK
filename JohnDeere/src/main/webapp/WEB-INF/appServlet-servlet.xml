<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/js/**" location="/resources/js/" />
	<mvc:resources mapping="/img/**" location="/resources/img/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- the maximum size of an uploaded file in bytes -->
		<!-- <property name="maxUploadSize" value="10000000"/> -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<mvc:view-controller path="/" view-name="login" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <bean class="com.zesium.rest.model.DropDownBoxController"> <property 
		name="formView" value="CustomerForm" /> <property name="successView" value="CustomerSuccess" 
		/> Map a validator <property name="validator"> <bean class="com.zesium.rest.model.DropDownBoxController" 
		/> </property> </bean> -->

	<!-- Register the Customer.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="message" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/john_deere" />
		<property name="connectionProperties" value="useUnicode=yes;characterEncoding=utf8;" />
		<!-- <property name="username" value="johndeere" />
		<property name="password" value="j0hnDeere%" /> -->
		<property name="username" value="root" />
		<property name="password" value="zesium" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="packagesToScan" value="com.zesium.rest.model"></property>
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="RestOperations" class="org.springframework.web.client.RestTemplate">
		<constructor-arg>
			<bean
				class="org.springframework.http.client.SimpleClientHttpRequestFactory">
				<property name="readTimeout" value="10000" />
				<property name="connectTimeout" value="10000" />
			</bean>
		</constructor-arg>
	</bean>

	<context:component-scan
		base-package="com.zesium.rest, com.zesium.rest.service, com.zesium.rest.service.impl, com.zesium.rest.model" />
</beans>
